std:plugin:resources("edit.css" "viewer.css")

if(viewComments) {
    std:plugin:resources("comments.css" "comments.js")
    // Configuration of commenting system for viewing _only_of comments
    <div id="z__docstore_comments_configuration"
        data-displayedversion=versionForComments
        data-view=if(viewComments){"1"}
        data-onlyform=activePage.form.formId
        data-url=commentsUrl
    >
        std:form:token()
    </div>
}

if(additionalUI.top) { render(additionalUI.top) }

if(navigationTop) {
  <div class="z__docstore_nav_top h-temp-docstore-nav-top" role="tablist"> render(navigationTop) </div>
}

if(showFormError) {
  std:ui:notice(i("Please complete all the required fields."))
}

if(additionalUI.formTop) { render(additionalUI.formTop) }

if(showFormTitles) {
    <h1 class="z__docstore_form_title"> activePage.form.formTitle </h1>
}

std:form(activePage.instance)

if(additionalUI.formBottom) { render(additionalUI.formBottom) }

<div class="z__docstore_save h-temp-docstore-save">
  <input type="submit" value=
    if(saveButtonLabel) {
      saveButtonLabel
    } else {
      switch(saveButtonStyle) { i("Save") }
                     continue { i("Save and continue") }
                       finish { i("Save and finish") }
    }
  >
  " "
  <button name="__later" value="s">
    if(saveForLaterButtonLabel) { saveForLaterButtonLabel } else { i("Save for later") }
  </button>
</div>

if(navigationBottom) {
  <div class="z__docstore_nav_bottom h-temp-docstore-nav-bottom" role="tablist" aria-hidden="true">
    render(navigationBottom)
  </div>
}

if(additionalUI.bottom) { render(additionalUI.bottom) }
